### 生成目录 

#### 1. 通过脚手架自动生成 weex-eros 目录，并进入生成的项目目录下：

```
$ bm eros init
```

![输入图片说明](https://gitee.com/uploads/images/2017/1026/155542_e040437f_1595985.gif "erosInit.gif")

##### 依次填写:

* 项目名称，默认 **weex-eros-demo；**

* 初始版本号，默认 **0.0.0；**

> 脚手架会自动从 NPM 上拉取最新的 [weex-eros 开发模板](https://www.npmjs.com/package/bmfe-weex-eros-template)，并自动帮您自动执行了 `cnpm install` 来下载前端开发时常用库和的依赖，如果您的依赖有变动，也请在`fe`目录下手动执行`npm install`，如果您配置了[淘宝源](https://npm.taobao.org/)，也可以执行`cnpm install`。

##### 生成的目录机构如下：

![输入图片说明](https://gitee.com/uploads/images/2017/1026/155605_939dabb2_1595985.png "erosMenu.png")

项目分为3个文件夹，各自开发只需要关心各自的目录即可，但我们的主要操作其实都是到`fe目录`下开始进行的。

#### 2. cd 进入到前端开发目录 fe 下

```
$ cd fe
```

#### 3. 通过 install 来选择更新和加载相应平台的依赖，有且仅当本木依赖基础组件库版本更新的时候，您可以选择性的执行下面指令来更新，首次启动必须执行。

```
$ bm eros install
```

下面我们以`ios`为例：

![](https://img.benmu-health.com/gitbook/bmInstall.gif)

> **bm eros install 中的 fe 选项对应组件库目前还在开发中，请给我们一点耐心。**

当执行完此指令后，如果您已经安装完 `Xcode` ，自动会为你打开，这时候您在点击左上方选择对应 `iphone` 模拟器，点击 `build` 箭头按钮便开始编译和打包您的 `app` 。

**注：**在windows环境下，执行此命令因为是执行 .sh 脚本，所以需要 git bash 来帮我们执行，一般来说您安装了 git for windows，然后配置下环境变量就行，详情点击[这里](https://jingyan.baidu.com/article/8cdccae947f83e315413cd05.html)，如果出现了类似如下报错：

```js
SyntaxError: Unexpected string
    at Object.exports.runInThisContext (vm.js:76:16)
    at Module._compile (module.js:542:28)
    at Object.Module._extensions..js (module.js:579:10)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.runMain (module.js:604:10)
    at run (bootstrap_node.js:394:7)
    at startup (bootstrap_node.js:149:9)
    at bootstrap_node.js:509:3
```

**请随便建一个以.sh为结尾的文件，右键设置默认打开程序是 git bash 即可。**

首次打开我们已经为您内置了由一些 `weex` 的官方 `demo` 和我们二次封装的一些组件 `demo` 打包而成的内置包。所以您可以看到相关的页面。

当然我们希望在开发阶段边开发边调试，实时预览修改的变动，而不是每次都是用**命令（sudo bm eros pack）**来打内置包，所以下面我们开始配置开发调试。

